prototype(Sitegeist.FusionForm.Upload:Upload)  < prototype(Neos.Fusion.Form:Component.Field) {

  attributes.type = "file"

  renderer = afx`
    <Neos.Fusion:Fragment @if={!field.isMultiple()}>
      <input
        @if.has={Type.instance(field.getCurrentValue(), 'Sitegeist\FusionForm\Upload\Domain\CachedUploadedFile')}
        type="hidden" name={field.getName() + '[originallySubmittedResource][__identity]'}
        value={field.getCurrentValue().persistenceObjectIdentifier}
      />
    </Neos.Fusion:Fragment>
    <Neos.Fusion:Fragment @if={field.isMultiple()}>
      <Neos.Fusion:Loop items={field.getCurrentValue()} itemName="item" @if={field.getCurrentValue()}>
        <input
          @if.has={Type.instance(item, 'Sitegeist\FusionForm\Upload\Domain\CachedUploadedFile')}
          type="hidden" name={field.getName() + '[originallySubmittedResource][__identity]'}
          value={item.persistenceObjectIdentifier}
        />
      </Neos.Fusion:Loop>
      <!-- empty fields to trick trusted properties to allow more than one value -->
      <input type="hidden" name={field.getName()} />
      <input type="hidden" name={field.getName()} />
      <input type="hidden" name={field.getName()} />
      <input type="hidden" name={field.getName()} />
      <input type="hidden" name={field.getName()} />
    </Neos.Fusion:Fragment>
    <input
      multiple={field.isMultiple()}
      name={field.getName()}
      {...props.attributes}
    />
  `
}
